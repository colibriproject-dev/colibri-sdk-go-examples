// Code generated by MockGen. DO NOT EDIT.
// Source: course_producer.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/colibri-project-io/colibri-sdk-go-examples/school-module/src/domain/models"
	gomock "github.com/golang/mock/gomock"
)

// MockICourseProducer is a mock of ICourseProducer interface.
type MockICourseProducer struct {
	ctrl     *gomock.Controller
	recorder *MockICourseProducerMockRecorder
}

// MockICourseProducerMockRecorder is the mock recorder for MockICourseProducer.
type MockICourseProducerMockRecorder struct {
	mock *MockICourseProducer
}

// NewMockICourseProducer creates a new mock instance.
func NewMockICourseProducer(ctrl *gomock.Controller) *MockICourseProducer {
	mock := &MockICourseProducer{ctrl: ctrl}
	mock.recorder = &MockICourseProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICourseProducer) EXPECT() *MockICourseProducerMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockICourseProducer) Delete(ctx context.Context, model *models.Course) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, model)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockICourseProducerMockRecorder) Delete(ctx, model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockICourseProducer)(nil).Delete), ctx, model)
}
