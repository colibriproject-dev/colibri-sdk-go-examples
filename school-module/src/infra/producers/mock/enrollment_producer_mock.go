// Code generated by MockGen. DO NOT EDIT.
// Source: enrollment_producer.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/colibri-project-io/colibri-sdk-go-examples/school-module/src/domain/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIEnrollmentProducer is a mock of IEnrollmentProducer interface.
type MockIEnrollmentProducer struct {
	ctrl     *gomock.Controller
	recorder *MockIEnrollmentProducerMockRecorder
}

// MockIEnrollmentProducerMockRecorder is the mock recorder for MockIEnrollmentProducer.
type MockIEnrollmentProducerMockRecorder struct {
	mock *MockIEnrollmentProducer
}

// NewMockIEnrollmentProducer creates a new mock instance.
func NewMockIEnrollmentProducer(ctrl *gomock.Controller) *MockIEnrollmentProducer {
	mock := &MockIEnrollmentProducer{ctrl: ctrl}
	mock.recorder = &MockIEnrollmentProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEnrollmentProducer) EXPECT() *MockIEnrollmentProducerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIEnrollmentProducer) Create(ctx context.Context, model *models.Enrollment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, model)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIEnrollmentProducerMockRecorder) Create(ctx, model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIEnrollmentProducer)(nil).Create), ctx, model)
}

// Delete mocks base method.
func (m *MockIEnrollmentProducer) Delete(ctx context.Context, model *models.Enrollment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, model)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIEnrollmentProducerMockRecorder) Delete(ctx, model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIEnrollmentProducer)(nil).Delete), ctx, model)
}
