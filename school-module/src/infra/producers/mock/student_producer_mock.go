// Code generated by MockGen. DO NOT EDIT.
// Source: student_producer.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/colibri-project-io/colibri-sdk-go-examples/school-module/src/domain/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIStudentProducer is a mock of IStudentProducer interface.
type MockIStudentProducer struct {
	ctrl     *gomock.Controller
	recorder *MockIStudentProducerMockRecorder
}

// MockIStudentProducerMockRecorder is the mock recorder for MockIStudentProducer.
type MockIStudentProducerMockRecorder struct {
	mock *MockIStudentProducer
}

// NewMockIStudentProducer creates a new mock instance.
func NewMockIStudentProducer(ctrl *gomock.Controller) *MockIStudentProducer {
	mock := &MockIStudentProducer{ctrl: ctrl}
	mock.recorder = &MockIStudentProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStudentProducer) EXPECT() *MockIStudentProducerMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockIStudentProducer) Delete(ctx context.Context, model *models.Student) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, model)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIStudentProducerMockRecorder) Delete(ctx, model interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIStudentProducer)(nil).Delete), ctx, model)
}
